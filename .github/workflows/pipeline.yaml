jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: dotnet build PizzaBox.Client

  test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: dotnet test PizzaBox.Testing -p:CollectCoverage=true -p:CoverletOutputFormat=opencover -p:CoverletOutput=./test_coverage/ -l trx -r ./test_result/

  analyze:
    needs:
      - build
      - test
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: dotnet tool install -g dotnet-sonarscanner
      - run: dotnet sonarscanner begin -k:'project_pizzabox_web' -o:'quatryle' -d:sonar.login=$SONAR_TOKEN -d:sonar.host.url='https://sonarcloud.io'
      - run: dotnet build PizzaBox.Client
      - run: dotnet-sonarscanner end -d:sonar.login=$SONAR_TOKEN

  package:
    env:
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      DOCKER_USER: ${{ secrets.DOCKER_USER }}
    needs:
      - analyze
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: docker image build -f Dockerfile -t PizzaBox.Client
      - run: docker image tag pizzabox quatryle/pizzabox
      - run: echo @DOCKER_TOKEN | docker login -u $DOCKER_USER --password-stdin
      - run: docker push quatryle/pizzabox
      - run: docker logout

  deploy:
    needs:
      - package
    runs-on: ubuntu-20.04
    steps:
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - uses: azure/webapps-deploy@v2
        with:
          app-name: pizzaboxquatryle
          images: quatryle/pizzabox

name: ci-pipeline

on: push
